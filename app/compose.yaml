services:
  prod:
    container_name: groc-prod
    build: .
    user: root
    ports:
      - 80:80
    environment:
      CHOKIDAR_USEPOLLING: 'true'
      NODE_ENV: production
    tty: true
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    networks:
      - groc_network

  dev:
    container_name: groc-dev
    build: .
    user: root
    ports:
      - 4321:4321
    environment:
      CHOKIDAR_USEPOLLING: 'true'
      NODE_ENV: development
    tty: true
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - groc_network

  tests:
    container_name: groc-tests
    build: .
    user: root
    environment:
      NODE_ENV: development
    tty: true
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - groc_network

  styles:
    container_name: groc-styles
    build: .
    user: root
    environment:
      NODE_ENV: development
    tty: true
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - groc_network

  storybook:
    build: .
    user: root
    container_name: groc-storybook
    environment:
      NODE_ENV: development
      IS_DOCKER: true
    tty: true
    ports:
      - 6006:6006
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - groc_network

  playwright:
    build: .
    user: root
    container_name: groc-playwright
    environment:
      NODE_ENV: development
      IS_DOCKER: true
    tty: true
    ports:
      - 9323:9323
      - 8080:8080
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /tmp/.X11-unix:/tmp/.X11-unix
    networks:
      groc_network:
    image: mcr.microsoft.com/playwright:v1.40.0-jammy
    depends_on:
      - dev

  postgresql:
    container_name: groc-db
    environment:
      DATABASE_HOST: 127.0.0.1
      POSTGRES_PASSWORD: groc
      POSTGRES_USER: groc
      POSTGRES_DB: groc
    ports:
      - 5432:5432
    networks:
      - groc_network
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d groc -U groc']
      interval: 1s
      timeout: 5s
      retries: 10
    image: postgres:16.2-bookworm

  pgadmin:
    container_name: groc-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: groc@groc.com
      PGADMIN_DEFAULT_PASSWORD: groc
      PGADMIN_LISTEN_PORT: 6543
    ports:
      - 6543:6543
    networks:
      - groc_network
    image: dpage/pgadmin4:8.4
    depends_on:
      - postgresql

networks:
  groc_network:
    name: groc_network
